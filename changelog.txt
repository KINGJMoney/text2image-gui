SD GUI 1.7.1 Changelog:
- Added DPM++2 and DPM++2A samplers
- Added advanced syntax for step count (run same image with different step counts)
- New prompt attention syntax - Use (text)++ instead of ((text)), etc.
- Added automatic conversion of old attention syntax to new syntax
- Security: Added pickle malware scanner (checks model files automatically)
- Minor UI improvements, DreamBooth now has a dedicated button
- Fixed issues with pytorch not working correctly (No CUDA GPU detected)
- Fixed issues with post-processing after generation
- Fixed negative prompt input being visible when using Low Memory Mode
- Fixed certain sliders loading invalid values after restarting the program
- Reduced installation size and optimized code


SD GUI 1.7.0 Changelog:
- Added support for running multiple init images at once, e.g. for animation frames
- Added support for wildcards (insert words/phrases into prompt dynamically)
- Added "Hi-res Fix" which allows better results at higher (>512px) resolutions
- Added support for loading custom VAE models (can improve image quality)
- Added support for running upscaling or face restoration manually
- Added support for all samplers when using an init image (not just DDIM)
- Added button to resize the window to fit the currently displayed image
- Added option to save output images in a subfolder per session
- Added options to use seamless mode only on one axis (horizontal or vertical)
- Added a label that displays the current image's prompt
- Added hotkeys: Quick-switch VAE, copy current image, copy image to favorites
- Added new developer tool: Open CMD in SD Conda environment
- DreamBooth training: Images can now be automatically resized if they are not 512x512
- DreamBooth training: Added slider for steps multiplier (0.5x-2x)
- GUI improvements, prompt and negative prompt are now separate
- Image viewer now also shows "actual" image resolution (for upscaled images)
- Sliders now also allow you to type a value instead of dragging the handle
- Loading image metadata now also works for images generated with automatic1111
- "Delete All Current Images" now requires a confirmation
- Improved prompt history/queue UI (show full prompt on hover, and more)
- Improved GUI rendering, should have less flickering now
- Fixed bug where model pruning would say "Failed..." even if it was successful


SD GUI 1.6.0 Changelog:
- Added Dreambooth training (24 GB VRAM required for now!)
- Added support for prompt emphasis - () for more, {} for less
- Added Model Quick Switcher: Press Ctrl+M to quickly change the current AI model
- Added model folder manager: You can now add additional model folders to load models from
- Pop-Up Image Viewer: When slideshow mode is enabled, Left/Right arrow keys change images
- Pop-Up Image Viewer: Window can now be resized/zoomed in 25% steps using mouse wheel
- Pop-Up Image Viewer: Added "Always on Top" option to keep window always on top
- Added lots of hotkeys, documented on Github Readme
- Words in prompt field can now be deleted using CTRL+BACKSPACE, like in most text editors
- Model Pruning Tool: Added option to delete input file if pruning was successful
- Fixed an issue where the Stable Diffusion process would be killed when cancelling
- Fixed prompt queue not working after running first entry


SD GUI 1.5.0 Changelog:
- Upstream Code Update: Supports exclusion words, runs on 4 GB VRAM (when no other apps are open)
- UI is now more flexible, window can be resized, prompt field is bigger and has zoomable text
- Added CodeFormer face restoration as an alternative to GFPGAN
- Updated RealESRGAN (upscaler), should now be faster with same or better quality
- Added button to delete either the current image, or all generated images
- Added separate checkboxes to choose if you want to include prompt/seed/scale/sampler/model in filename
- Added option to save original image in addition to the post-processed image (if post-proc is enabled)
- Added option to select the CUDA device (Automatic, CPU, or a specific GPU)
- Added model merging tool
- Added model pruning tool (strip EMA data and/or convert to fp16 half-precision for 2 GB models)
- Added option to unload Stable Diffusion after each generation (like in pre-1.4.0)
- Added reliable orphan process handling (Python no longer stays in RAM if the GUI crashes)
- Image Viewer: Added short cooldown after using prev/next image buttons, before the newest will be shown again
- Image Viewer context menu: Added button to re-generate single image with current settings/seed
- Image Viewer Pop-up: Now borderless, 100% zoom by default, double-click for fullscreen
- Image Viewer Pop-up: Added "Slideshow Mode" which mirrors the regular image viewer when enabled
- Added image load form, allows you to use as init image, load settings from metadata, or copy prompt
- Images can now be loaded from clipboard, not just from files
- Prompt History: Added option to disable history, added text filter
- You can now add an entry to the prompt queue by right-clicking on its icon
- Disabled post-processing with Low Memory Mode as it was not working properly
- Prompt text in folder/file names now strips weighting (won't create new folders for each weight change)
- Current model name gets printed whenever Stable Diffusion is started
- Full Precision is now enabled by default on GTX 16 series cards to fix compatibility with them
- Fixed empty/invalid prompts (e.g. newlines) counting towards the target image amount
- Some fixes regarding cancelling the generation process and handling crashes

NOTES:
Low Memory Mode is a low priority for me because it's a separate codebase so adding features is hard.
Also, the regular mode can now run on 6 GB easily, and even 4 GB if all other GPU apps are closed.
Apart from that, it's now possible to run the regular mode on CPU, which is slow, but it works.


SD GUI 1.4.0 Changelog:
- Stable Diffusion model no longer needs to be reloaded every time new images are generated
- Added support for mask-based inpainting
- Added support for loading HuggingFace .bin concepts (textual inversion embeddings)
- Added prompt queue, allows you to queue up prompts with their settings
- Added prompt history, allows your to view or load previous prompts
- Added a progress bar that shows the generation progress of the current image
- Added option to play sound and/or show notification when finished
- Added a "Welcome screen" that shows the changelog and patrons
- Added buttons to use the previous seed or to reset it
- Added button to expand prompt field to 2x height
- Added proper support for DPI scaling
- Post-processing now works with Low Memory Mode
- Further VRAM optimizations, especially in regular mode
- Available CUDA GPUs are now listed in window title
- Windows should not be able to go to sleep while the program runs (untested)
- Updated GFPGAN model to 1.4
- Fixed a bug where empty "unknown prompt" folders were created
- Fixed some issues regarding the python environment


SD GUI 1.3.1 Changelog:
- Init image (img2img) now works with Low Memory Mode
- Log button now has options to copy each log directly
- Added Stable Diffusion model selection in Settings
- Added a right-click menu to the full-screen image viewer window with "Copy Image" option
- Added warning if prompt might be too long for CLIP (>70 words)
- Installation should no longer conflict with system Python/Conda installations
- Installer will no longer re-install Python environment by default (if it already exists)
- Fixed output folder not being created if it does not exist
- Fixed file type check (for init image, embeddings) being case-sensitive
- Fixed uppercase file extensions not being accepted for init images or embeddings
- Fixed original image always being saved in addition to upscaled image
- VRAM usage optimizations
- Other minor bug fixes


SD GUI 1.3.0 Changelog:
- Added option to use low-VRAM code, only needs around 3.3 GB VRAM for 512x512 images
- Added optional AI post-processing: RealESRGAN upscaling and GFPGAN face restoration
- Added option to generate seamless (tileable) images
- Added fullscreen image preview (click on image to open), click into it for 2x2/3x3 tiling (if seamless mode is enabled)
- Added option to save images to a subfolder per prompt
- Added option to disable prompt in filename
- User can now run multiple prompts at once (one prompt per line, not counting word wrap)
- Added option to use the same seed for each prompt when running multiple prompts
- Added option to change image output folder
- Added warnings if the program is running from a long or problematic (e.g. OneDrive) path
- Slightly reduced VRAM usage across both implementations (fast/optimized)
- Improved installer, python files are now included and should no longer conflict with system conda
- Error messages are now shown for common errors
- Fixed full-precision option not actually enabling full-precision
- Fixed DPI scaling breaking
- General logging and UX improvements
- UI improvements